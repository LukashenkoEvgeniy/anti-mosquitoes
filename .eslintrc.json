{
  "env": {
    "browser": true,
    "node": true
  },
  //  "extends": ["airbnb-base"],
  "parser": "babel-eslint",
  "rules": {
    "quotes": [
      1,
      "single"
    ],
    //    "strict": [1, "never"],
    //    "react/jsx-uses-react": 1,
    "react/jsx-uses-vars": 1,
    "react/jsx-no-undef": 1,
    "react/react-in-jsx-scope": 1,
    //    "react/boolean-prop-naming": 1, // //Enforces consistent naming for boolean props
    "react/default-props-match-prop-types": 1,
    // 1, // //Prevent extraneous defaultProps on components
    "react/display-name": 1,
    // 1, // //Prevent missing displayName in a React component definition
    "react/forbid-component-props": 0,
    // 1, // //Forbid certain props on Components
    "react/forbid-elements": 1,
    // Forbid certain elements
    "react/forbid-prop-types": [
      0,
      {
        "forbid": [
          "className"
        ]
      }
    ],
    //Forbid certain propTypes
    "react/forbid-foreign-prop-types": 1,
    // Forbid foreign propTypes
    "react/no-array-index-key": 1,
    // Prevent using Array index in key props
    "react/no-children-prop": 1,
    // Prevent passing children as props
    "react/no-danger": 1,
    // Prevent usage of dangerous JSX properties
    "react/no-danger-with-children": 1,
    // Prevent problem with children and props.dangerouslySetInnerHTML
    "react/no-deprecated": 1,
    // Prevent usage of deprecated methods
    "react/no-did-mount-set-state": 1,
    // Prevent usage of setState in componentDidMount
    "react/no-did-update-set-state": 1,
    // Prevent usage of setState in componentDidUpdate
    "react/no-direct-mutation-state": 1,
    // Prevent direct mutation of this.state
    "react/no-find-dom-node": 1,
    // Prevent usage of findDOMNode
    "react/no-is-mounted": 1,
    // Prevent usage of isMounted
    "react/no-multi-comp": 0,
    // Prevent multiple component definition per file
    "react/no-redundant-should-component-update": 1,
    // Prevent usage of shouldComponentUpdate when extending "react.PureComponent
    "react/no-render-return-value": 1,
    // Prevent usage of the return value of "react.render
    "react/no-set-state": 0,
    // Prevent usage of setState
    //    "react/no-typos": 1, // Prevent common casing typos
    "react/no-string-refs": 1,
    // Prevent using string references in ref attribute.
    "react/no-unescaped-entities": 1,
    // Prevent invalid characters from appearing in markup
    "react/no-unknown-property": 1,
    // Prevent usage of unknown DOM property (fixable)
    "react/no-unused-prop-types": 1,
    // Prevent definitions of unused prop types
    "react/no-will-update-set-state": 1,
    // Prevent usage of setState in componentWillUpdate
    "react/prefer-es6-class": 1,
    // Enforce ES5 or ES6 class for "react Components
    "react/prefer-stateless-function": 1,
    // Enforce stateless "react Components to be written as a pure function
    "react/prop-types": 1,
    // Prevent missing props validation in a "react component definition
    "react/require-default-props": 1,
    // Enforce a defaultProps definition for every prop that is not a required prop
    "react/require-optimization": 1,
    // Enforce "react components to have a shouldComponentUpdate method
    "react/require-render-return": 1,
    // Enforce ES5 or ES6 class for returning value in render function
    "react/self-closing-comp": 1,
    // Prevent extra closing tags for components without children (fixable)
    "react/sort-comp": 0,
    // Enforce component methods order
    "react/sort-prop-types": 1,
    // Enforce propTypes declarations alphabetical sorting
    "react/style-prop-object": 1,
    // Enforce style prop value being an object
    "react/void-dom-elements-no-children": 1,
    // Prevent void DOM elements (e.g. <img />, <br />) from receiving children
    //
    //    //JSX-specific rules
    //
    "react/jsx-boolean-value": 1,
    // Enforce boolean attributes notation in JSX (fixable)
    "react/jsx-closing-bracket-location": 0,
    // Validate closing bracket location in JSX (fixable)
    "react/jsx-closing-tag-location": 0,
    // Validate closing tag location in JSX (fixable)
    "react/jsx-curly-spacing": 1,
    // Enforce or disallow spaces inside of curly braces in JSX attributes and expressions (fixable)
    "react/jsx-equals-spacing": 1,
    // Enforce or disallow spaces around equal signs in JSX attributes (fixable)
    "react/jsx-filename-extension": 1,
    // Restrict file extensions that may contain JSX
    "react/jsx-first-prop-new-line": 1,
    // Enforce position of the first prop in JSX (fixable)
    "react/jsx-handler-names": 1,
    // Enforce event handler naming conventions in JSX
    "react/jsx-indent": 1,
    // Validate JSX indentation (fixable)
    "react/jsx-indent-props": 1,
    // Validate props indentation in JSX (fixable)
    "react/jsx-key": 1,
    // Validate JSX has key prop when in array or iterator
    "react/jsx-max-props-per-line": 1,
    // Limit maximum of props on a single line in JSX (fixable)
    "react/jsx-no-bind": [
      1,
      {
        "ignoreRefs": true,
        "allowArrowFunctions": true,
        "allowBind": false
      }
    ],
    // Prevent usage of .bind() and arrow functions in JSX props
    "react/jsx-no-comment-textnodes": 1,
    // Prevent comments from being inserted as text nodes
    "react/jsx-no-duplicate-props": 1,
    // Prevent duplicate props in JSX
    "react/jsx-no-literals": 1,
    // Prevent usage of unwrapped JSX strings
    "react/jsx-no-target-blank": 1,
    // Prevent usage of unsafe target='_blank'
    "react/jsx-pascal-case": 1,
    // Enforce PascalCase for user-defined JSX components
    "react/jsx-sort-props": 1,
    // Enforce props alphabetical sorting
    "react/jsx-tag-spacing": 0,
    // Validate whitespace in and around the JSX opening and closing brackets (fixable)
    "react/jsx-wrap-multilines": 1
    // Prevent missing parentheses around multilines JSX (fixable)
  },
  "plugins": [
    "react",
    "jsx-a11y",
    "import"
  ]
}